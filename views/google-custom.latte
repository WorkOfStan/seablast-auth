{layout 'BlueprintProtokronika.latte'} {* just a demo - delete eventually; user.latte to be used *}
{block mainblock}
{* include './login-social-google.latte' *}

{* Below is an example that removes the default Google button markup and instead uses your own HTML button with vanilla JavaScript.
  In this example, we initialize the Google Identity Services as before and then attach a click event listener to your custom button. 
  When clicked, it calls google.accounts.id.prompt(), which will trigger the One Tap UI for sign‑in.
  (Note that the new Google Identity Services no longer open a traditional pop‑up account chooser; instead, it displays the One Tap UI.) *}
      <!-- Custom Google Login Button -->
      Přihlásit s Google: <button id="custom-google-btn">Sign in with Google</button>
      
      <script referrerpolicy="strict-origin-when-cross-origin">
          const GOOGLE_CLIENT_ID ={$configuration->getString('AuthApp:GOOGLE_CLIENT_ID')};
          
        // Callback to handle the Google credential response
        function handleGoogleCredentialResponse(response) {
          if (response.credential) {
            // Mark user as logged in (e.g., set in localStorage)
            localStorage.setItem('isLoggedInGoogle', 'true');
            passTokenToApi(response.credential, 'google');
          } else {
            console.error('Received invalid Google credential response:', response);
          }
        }
        
        // Initialize Google Identity Services when the page loads
        window.onload = function () {
          google.accounts.id.initialize({
            client_id: GOOGLE_CLIENT_ID,
            callback: handleGoogleCredentialResponse,
            auto_select: false  // disable auto sign-in so we can trigger manually .. so that no sign‑in occurs until the user clicks the custom button
          });
          // Optionally, do not prompt automatically
          // google.accounts.id.prompt();  // Commented out so that our custom button triggers the prompt
          
          // Attach event listener to custom button
          var customBtn = document.getElementById('custom-google-btn');
          customBtn.addEventListener('click', function(event) {
            event.preventDefault();
            // Manually trigger the One Tap prompt
            google.accounts.id.prompt();
          });
        };
      </script>
      <script src="https://accounts.google.com/gsi/client" async defer></script>

{/block}
{block script}
{include './login-social-common-script.latte'}
{/block}
